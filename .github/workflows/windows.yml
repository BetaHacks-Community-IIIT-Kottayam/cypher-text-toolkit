on:
    push:
      branches:
        - main
        - master
    pull_request:
      branches:
        - main
        - master
  
name: Windows build
jobs:
    test-windows:
      runs-on: windows-latest
      steps:
        - uses: actions/checkout@v4
        
        - name: Install miniconda
          uses: conda-incubator/setup-miniconda@v2
          with:
            auto-activate-base: true
            python-version: "3.11"
  
        - name: Install GDAL
          run: conda install -c conda-forge gdal --yes
  
        - name: Set GDAL environment variables
          run: |
            echo Setting GDAL_DATA to $Env:CONDA_PREFIX\Library\share\gdal
            echo Setting PROJ_LIB to $Env:CONDA_PREFIX\Library\share\proj
            echo Adding $Env:CONDA_PREFIX\Library\bin to PATH
            [System.Environment]::SetEnvironmentVariable('GDAL_DATA', "$Env:CONDA_PREFIX\Library\share\gdal", 'Process')
            [System.Environment]::SetEnvironmentVariable('PROJ_LIB', "$Env:CONDA_PREFIX\Library\share\proj", 'Process')
            [System.Environment]::SetEnvironmentVariable('PATH', "$Env:CONDA_PREFIX\Library\bin;$Env:PATH", 'Process')
  
        - name: Verify GDAL installation and environment variables
          run: |
            echo GDAL_DATA=$Env:GDAL_DATA
            echo PROJ_LIB=$Env:PROJ_LIB
            echo PATH=$Env:PATH
            conda list gdal
            where gdalinfo
            gdalinfo --version
            python -c "import os; print('GDAL_DATA:', os.getenv('GDAL_DATA')); print('PROJ_LIB:', os.getenv('PROJ_LIB')); from osgeo import gdal; print('GDAL Version:', gdal.__version__)"
  
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install --no-cache-dir Cython
            pip install -r requirements.txt
            pip install .
  